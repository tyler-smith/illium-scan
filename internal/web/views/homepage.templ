package views


import (
    "golang.org/x/text/language"
    "golang.org/x/text/message"

    "github.com/tyler-smith/iexplorer/internal/db/models"
    "github.com/tyler-smith/iexplorer/internal/web/helpers"
)

templ Homepage(blocks []models.Block, stakes []models.Stake, proposals []models.TreasuryProposal) {
    <div class="grid grid-cols-12 gap-4">
      <div class="col-span-6">
        <div class="card bg-white rounded-lg shadow-lg p-6">
          <p class="text-xl font-bold">Blocks</p>
          <div class="divide-y divide-zinc-400 border-b border-b-zinc-400">
            for _, block := range blocks {
              <div class="my-1.5 p-0.5 grid grid-cols-12">
                  <div class="col-span-4">
                    <p>
                      <span class="text-md">#{helpers.FormatBlockHeight(block.Height)}</span>
                      <span class="text-md">
                        <a href={"/blocks/"+ templ.URL(block.ID)} class="text-blue-500">{block.ID[:8]}</a>
                      </span>
                    </p>
                    <p class="text-sm">{helpers.FormatTimeRelative(block.Timestamp)}</p>
                  </div>
                  <div class="col-span-4">
                    <p>
                      <span class="text-md">From</span>
                      <span class="text-md">
                        <a href={"/validators/"+ templ.URL(block.ProducerID)} class="text-blue-500">{helpers.FormatIDShort(block.ProducerID)}</a>
                      </span>
                    </p>
                    <p class="text-sm">{helpers.FormatInt(block.TxCount)} transactions</p>
                  </div>
                  <div class="col-span-4">
                    <p>
                      <span class="text-md">Fees: {helpers.FormatAmount(block.TotalFees)} ilx</span>
                    </p>
                  </div>
                </div>
            }
          </div>
          <div class="px-6 pt-4 pb-2 text-center">
            <button
                class="bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded">
              Cancel
            </button>
            <button
                class="bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded">
              Save
            </button>
            <button
                class="bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded">
              Next
            </button>
          </div>
        </div>
      </div>
      <div class="col-span-6">
        <div class="card bg-white rounded-lg shadow-lg p-6">
            <p class="text-xl font-bold">Validators</p>
            <div class="divide-y divide-zinc-400 border-b border-b-zinc-400">
            for _, stake := range stakes {
              <div class="p-0.5">
                <div class="my-1.5 grid grid-cols-12">
                  <div class="col-span-4">
                    <p>
                      {stake.ValidatorID[:8]}...{stake.ValidatorID[len(stake.ValidatorID)-8:]}
                    </p>
                  </div>
                  <div class="col-span-4">
                    <p>
                      {message.NewPrinter(language.English).Sprintf("%d", stake.Amount)} ilx
                    </p>
                  </div>
                </div>
              </div>
              }
            </div>
        </div>
      </div>
      <div class="col-span-6">
        <div class="card bg-white rounded-lg shadow-lg p-6">
            <p class="text-xl font-bold">Treasury Proposals</p>
            <div class="divide-y divide-zinc-400 border-b border-b-zinc-400">
            for _, p := range proposals {
              <div class="p-0.5">
                <div class="my-1.5 grid grid-cols-12">
                  <div class="col-span-4">
                    <p>
                      {p.ProposalHash[:8]}
                    </p>
                  </div>
                  <div class="col-span-4">
                    <p>
                      {helpers.FormatAmount(p.Amount)} ilx
                    </p>
                  </div>
                </div>
              </div>
              }
            </div>
        </div>
      </div>
    </div>
}
